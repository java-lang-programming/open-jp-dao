name: 結合テスト コードチェック&テスト no docker(ansibleに移行すること)

on:
  push:
    branches:
      - main
      - develop
      # - feature/*
    paths-ignore:
      - contracts/*
      - backend/*
      - docs/*
      - mock/*
      - .gitignore
      - '**.md'

env:
  BUNDLER_VESION: 2.5.15

#　やること
# 0. 
# 1. backendを動かす(接続先はdev)
# 2. trackを動かす
# 3. frontからtrackを呼び出す

jobs:
  launch_server:
    name: launch web3 backend and rails server
    runs-on: ubuntu-24.04
    strategy:
      matrix:
        python-version: ["3.13"]
        ruby-version: ["3.4.1"]
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          architecture: 'x64' # optional x64 or x86. Defaults to x64 if not specified
      - name: Install Poetry(no virtualenvs)
        run: |
          cd backend/server
          pip install poetry
          poetry config virtualenvs.in-project false && poetry config installer.parallel false && poetry config virtualenvs.create false && poetry install --no-root
      - name: launch backend application at background
        run: |
          cd backend/server
          make launch_pro_server
      - name: wait launching web3 server.
        run: |
          ./backend/server/scripts/wait_launch_server.sh

      - name: Install ruby(rails) packages
        run: sudo apt-get update && sudo apt-get install --no-install-recommends -y libjemalloc2 sqlite3

      - name: Set up Ruby ${{ matrix.ruby-version }}
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ matrix.ruby-version }}
          bundler-cache: true

      - name: Install packages
        run: gem install bundler -v $BUNDLER_VESION

      - name: Bundle install production
        working-directory: track
        run: make bundle_install_production
